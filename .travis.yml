sudo: required
# We need the systemd for the kubeadm and it's default from 16.04+
dist: xenial
language: python
python:
- "3.7"
env:
  global:
  - CHANGE_MINIKUBE_NONE_USER=true
  - MINIKUBE_WANTUPDATENOTIFICATION=false
  - MINIKUBE_WANTREPORTERRORPROMPT=false
  - MINIKUBE_HOME=$HOME
  - CHANGE_MINIKUBE_NONE_USER=true
  - KUBECONFIG=$HOME/.kube/config
install:
- pip3 install -r requirements.txt
- pip3 install -r test-requirements.txt
- python3 setup.py develop
before_script:
# K8S
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.2.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- mkdir -p $HOME/.kube $HOME/.minikube
- touch $KUBECONFIG
- sudo minikube start --vm-driver=none --kubernetes-version=v1.15.0 
- "sudo chown -R travis: /home/travis/.minikube/"
# Following is just to demo that the kubernetes cluster works.
- kubectl cluster-info
# Verify kube-addon-manager.
# kube-addon-manager is responsible for managing other kubernetes components, such as kube-dns, dashboard, storage-provisioner..
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lcomponent=kube-addon-manager -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-addon-manager to be available"; kubectl get pods --all-namespaces; done
# Wait for kube-dns to be ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-dns to be available"; kubectl get pods --all-namespaces; done
# - minikube update-context
- kubectl config view
# NOMAD
- curl -Lo nomad.tar.gz https://releases.hashicorp.com/nomad/0.7.1/nomad_0.7.1_linux_amd64.zip
- unzip nomad.tar.gz
- chmod +x nomad
- sudo mv nomad /usr/local/bin
- docker run -v /usr/local/bin:/hostbin munnerz/ubuntu-nsenter cp /nsenter /hostbin/nsenter
- nomad agent -dev &

script:
- flake8 aioclustermanager
- py.test --cov=aioclustermanager --cov-report=xml aioclustermanager -s
after_success:
- codecov
- rm -rf *.egg-info
deploy:
  skip_cleanup: true
  provider: pypi
  user: ramon.nb
  password:
    secure: ZVWg5NCM/sAQpQuuQ79WSZSpS3KafIxjbNxuys979D+O/f4nM0a2G+uP2wowFH7LGXqNDeMc50qassZQecoKAB4nzC0QhPppnZBLsgZj77fDi0AEQ0vu4znWxWldmN2cYyRgTgA/XC3TX1esXIykPz3zPpimjEUspiTb1LqZwAA5TtV+8w2BRJWIF2EbbfkXGrit50Z/6BIXE/bNoFLq7fVHaQZUoUUi28jg36EsoIjzICJ6FBEiC0qYOiQZjDy9xW+nBhyYqEWDd75dV8FhVPrmrykxw8erLqkfgKqh3NKFasp9L+79i2l2hZkYqDocdjxidWG/0c2iw4Kn3eyMWmF9R5i/JU9qDsmNc6iGDrV/lniu5/p1JZ03gHJ9LG7ZTabbg+2dpELa5RMXUgACL/hcuco685spcBsjw9NdhzfOPdYeH8R26UneB7fGvR5eLe5cPYdgFC29q0+lQFoo+Ld7hdVqlLZOih4/ciDtdHRJkkqU3mg2NdjOD8ZTyMBbtuoi6d52ubkn5C6Dr0YGSGNXLFPiFASUgMikIf5Hu2hyUaXpTK8x2fDvLhLExYm2nN9xcowVmJ28vP5HWRLFvJwzePcS1ykdTaaU5dtkft4GS1/tEy18DBeYtI7vdhXQF4ahYfBAjHVzlVLrmW+fGfNmFly95AGtBfIAsNwh5wk=
  on:
    tags: true
  distributions: sdist bdist_wheel
